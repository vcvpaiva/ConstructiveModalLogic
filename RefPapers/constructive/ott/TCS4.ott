                      metavar termvar, x , y ::=
  {{ tex \mathit{[[termvar]]} }} {{ com  term variable  }}

indexvar index, i , j , k ::=

grammar
  term, t, r, s, n :: 't_' ::=                                         {{ com term }}
    | x                          ::   :: var                     {{ com variable }}
    | contra                     ::   :: contra
    {{tex \mathsf{contra} }}    
    | \ x : T . t                ::  :: lambdas                  {{ com unary functions }}
    {{tex \lambda [[x]] : [[T]].[[t]] }}
    | t1 t2                      ::  :: application              {{ com function application }}
    | Box t                      ::  :: PNecessity               {{ com past necessity functor }}
    | Dia t                      ::  :: PPossibility             {{ com past possibility functor }}
    | BBox t                     ::  :: Necessity                {{ com necessity functor }}
    | BDia t                     ::  :: Possibility              {{ com possibility functor }}
    | letBox t1 : T = t2 in t3       ::  :: LetPNecessity            {{ com past necessity elim }}
    {{tex \mathsf{let}\,\Box [[t1]]:[[T]] = [[t2]]\,\mathsf{in}\,[[t3]] }}
    | letBBox t1 : T = t2 in t3      ::  :: LetNecessity            {{ com necessity elim }}
    {{tex \mathsf{let}\,\blacksquare [[t1]]:[[T]] = [[t2]]\,\mathsf{in}\,[[t3]] }}
    | letDia t1 : T = t2 in t3       ::  :: LetPPossibility           {{ com past possibility elim }}
    {{tex \mathsf{let}\,\Diamond [[t1]]:[[T]] = [[t2]]\,\mathsf{in}\,[[t3]] }}
    | letBDia t1 : T = t2 in t3      ::  :: LetPossibility           {{ com possibility elim }}
    {{tex \mathsf{let}\,\blacklozenge [[t1]] :[[T]] = [[t2]]\,\mathsf{in}\,[[t3]] }}
    | [ t1 / t ] t2              :: M :: Sub    
    | ( t )                      :: S :: Paren
    | h( t )                     :: M :: HParen
    {{tex [[t]] }}
    | r R                        :: M :: MElim
    | letM t1 : T = t2 in t3         :: M :: LetM           
    {{tex \mathsf{let}\,\mathbin{M} [[t1]]:[[T]] = [[t2]]\,\mathsf{in}\,[[t3]] }}
    | vec t                      :: M :: vector
    {{tex \overrightarrow{[[t]]} }}
    | M t                        :: M :: M
    {{tex \mathbin{M} [[t]] }}

  form, type, A, B, C, T :: 'T_' ::=                   {{ com formula and type }}
    | False            ::   :: False                   {{ com false or the empty type }}
    | Box A            ::   :: PNecessity               {{ com past necessity }}
    | BBox A           ::   :: Necessity              {{ com necessity }}
    | Dia A            ::   :: PPossibility             {{ com past possibility }}
    | BDia A           ::   :: Possibility            {{ com possibility }}
    | A -> B           ::   :: Arrow                   {{ com implication }}
    | M A              :: M :: M
    {{tex \mathbin{M} [[A]] }}

  G {{ tex \Gamma }}, D {{tex \Delta }} :: G_ ::=      {{ com type context }}
    | .                   ::   :: em                      {{ com empty context }}
    | A                   ::   :: elF                     {{ com formula el }}
    | x : T               ::   :: elT                     {{ com typed el }}
    | G , G'              ::   :: append                  {{ com append }}

  terminals :: 'terminals_' ::=
    | .                   ::   :: Empty
    {{tex \emptyset }}
     | False               ::   :: False
    {{tex \perp }}
    | |-                  ::   :: turnstile
    {{ tex \vdash }}
    | Box                 ::   :: Box
    {{tex \Box }}
    | BBox                ::   :: BBox
    {{ tex \blacksquare }}
    | Dia                 ::   :: Dia
    {{tex \Diamond }}
    | BDia                ::   :: BDia
    {{tex \mathbin{\blacklozenge} }}
    | ->                  ::   :: Arrow
    {{tex \to }}
    | &&                  :: M :: Quad
    {{tex \quad }}
 
  formula :: 'formula_' ::=
    | judgement            ::   :: judgement
    | formula1 && formula2 :: M :: quad
    | ( formula )          :: S :: parens
    {{tex [[formula]] }}
    | M is Diamond         :: M :: isDiamond
    {{tex M \in \{\Diamond, \mathbin{\blacklozenge} \} }}

defns
  Jtype :: '' ::=

defn
 G1 ; G2 ; D |- A :: :: form :: L_    
by

  -------------- :: ax
  G1;G2;D,A |- A

  --------------- :: bax
  G1;G2,A; D |- A

  --------------- :: bbax
  G1,A;G2; D |- A

  ------------------- :: false
  G1;G2;D, False |- A

  G1;G2;D, A |- B
  ----------------- :: impI
  G1;G2;D |- A -> B
 
  G1;G2;D |- A -> B && G1;G2;D |- A
  --------------------------------- :: impE
  G1;G2;D |- B

  G1;G2;. |- A
  ---------------- :: boxI
  G1;G2;D |- Box A

  G1;G2;D |- Box A && G1;G2,A; D |- B
  -------------------------------------- :: boxE
  G1;G2;D |- B

  G1;G2;D |- A
  ----------------- :: bdiaI
  G1;G2;D |- BDia A

  G1;G2;D |- BDia A && G1;G2; A |- BDia B
  --------------------------------------- :: bdiaE
  G1;G2;D |- BDia A

  G1;G2 ; . |- A
  ------------------- :: bboxI
  G1;G2 ; D |- BBox A

  G1;G2;D |- BBox A && G1, A;G2; D |- B
  ------------------------------------- :: bboxE
  G1;G2;D |- B

  G1;G2;D |- A
  ---------------- :: diaI
  G1;G2;D |- Dia A

  G1;G2;D |- Dia A && G1;G2;A |- Dia B
  ------------------------------------ :: diaE
  G1;G2;D |- Dia B


defn
  G1 ; G2 ; D |- t : A :: :: type :: ty_   
by

  ----------------------- :: ax
  G1;G2;D, x : A |- x : A

  ---------------------- :: bax
  G1;G2,x : A;D |- x : A

  ---------------------- :: bbax
  G1,x : A;G2;D |- x : A

  -------------------------------- :: false
  G1;G2;D, x : False |- contra : A

  G1;G2;D, x : A |- t : B
  -------------------------- :: impI
  G1;G2;D |- \x:A.t : A -> B
 
  G1;G2;D |- t1 : A -> B && G1;G2;D |- t2 : A
  ------------------------------------------- :: impE
  G1;G2;D |- t1 t2 : B

  G1;G2;. |- t : A
  ------------------------ :: boxI
  G1;G2;D |- Box t : Box A

  G1;G2;D |- t1 : Box A && G1;G2, x : A;D |- t2 : B
  ------------------------------------------------- :: boxE
  G1;G2;D |- letBox x : Box A = t1 in t2 : B

  G1;G2 ; . |- t : A
  -------------------------- :: bboxI
  G1;G2;D |- BBox t : BBox A

  G1;G2;D |- t1 : BBox A && G1, x : A;G2; D |- t2 : B
  --------------------------------------------------- :: bboxE
  G1;G2;D |- letBBox x : BBox A = t1 in t2 : B

  G1;G2;D |- t : A && M is Diamond
  -------------------------------- :: diaI
  G1;G2;D |- M t : M A

  (G1;G2;D |- t1 : M A && G1;G2; x : A |- t2 : M B) && M is Diamond
  ----------------------------------------------------------------- :: diaE
  G1;G2;D |- letM x : M A = t1 in t2 : M B

defn
  G1 ; G2 ; D |- t1 = t2 : A :: :: eq :: eq_
  {{tex [[G1]];[[G2]];[[D]] \vdash [[t1]] \approx [[t2]] : [[A]] }}
by

 G1;G2;D,x : A |- t2 = t2' : B && G1;G2;D |- t1 = t1' : A
 -------------------------------------------------------- :: beta
 G1;G2;D |- (\x:A.t2) t1 = [t1'/x]t2' : B

 G1;G2;. |- t1 = t1' : A && G1;G2,x : A;D |- t2 = t2' : B
 ----------------------------------------------------------- :: box
 G1;G2;D |- letBox x : Box A = Box t1 in t2 = [t1'/x]t2' : B

 G1;G2;. |- t1 = t1' : A && G1,x : A;G2;D |- t2 = t2' : B
 -------------------------------------------------------------- :: bbox
 G1;G2;D |- letBBox x : BBox A = BBox t1 in t2 = [t1'/x]t2' : B

 (G1;G2;D |- t1 = t1' : A && G1;G2;x : A |- t2 = t2' : M B) && M is Diamond
 -------------------------------------------------------------------------- :: dia
 G1;G2;D |- letM x : M A = M t1 in t2 = [t1'/x]t2' : M B

 G1;G2;D |- t1 = t1' : Box C
 G1;G2,y : C;D |- t2 = t2' : Box A && G1;G2, x : A;D |- t3 = t3' : A
 ----------------------------------------------------------------------------------------------------------------------------- :: cbox
 G1;G2;D |- letBox x : Box A = letBox y : Box C = t1 in t2 in t3 = letBox y : Box C = t1' in letBox x : Box A = t2' in t3' : B

 G1;G2;D |- t1 = t1' : BBox C
 G1,y : C;G2;D |- t2 = t2' : BBox A && G1, x : A;G2;D |- t3 = t3' : A
 ------------------------------------------------------------------------------------------------------------------------------------ :: cbbox
 G1;G2;D |- letBBox x : BBox A = letBBox y : BBox C = t1 in t2 in t3 = letBBox y : BBox C = t1' in letBBox x : BBox A = t2' in t3' : B


 G1;G2;D |- t1 = t1' : M C
 (G1;G2;y : C |- t2 = t2' : M A && G1;G2;x : A |- t3 = t3' : M B) && M is Diamond
 ------------------------------------------------------------------------------------------------------------ :: cdia
 G1;G2;D |- letM x : M A = letM y : M C = t1 in t2 in t3 = letM y : M C = t1 in letM x : M A = t2 in t3 : M B

 G1;G2;D |- t : A
 -------------------- :: refl
 G1;G2;D |- t = t : A

 G1;G2;D |- t2 = t1 : A
 ---------------------- :: sym
 G1;G2;D |- t1 = t2 : A

 G1;G2;D |- t1 = t2 : A && G1;G2;D |- t2 = t3 : A
 ------------------------------------------------ :: trans
 G1;G2;D |- t1 = t3 : A